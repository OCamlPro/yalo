[project]
drom-version = "0.9.3"
share-repo = "https://github.com/OCamlPro/drom-share"
share-version = "0.9.3"

[project]
authors = ["Fabrice Le Fessant <fabrice.le_fessant@ocamlpro.com>"]
ci-systems = ["ubuntu-latest", "macos-latest", "windows-latest"]
copyright = "OCamlPro SAS"
edition = "4.14.1"
github-organization = "ocamlpro"
license = "LGPL2"
min-edition = "4.08.0"
name = "yalo"
skeleton = "program"
synopsis = "The yalo platform (Yet Another Linter for OCaml) is a plugin-based code scanner for OCaml projects and potentially other languages"
version = "0.1.0"

# keys that you could also define:
# odoc-target = "...odoc-target..."
# sphinx-target = "...sphinx-target..."
# archive = "...archive..."
# dev-repo = "...dev-repo..."
# bug-reports = "...bug-reports..."
# doc-api = "...doc-api..."
# doc-gen = "...doc-gen..."
# homepage = "...homepage..."

[project]
description = """
Yalo aims at providing a code scanner for OCaml projects. Because most organizations want to easily add their own linting rules, Yalo is plugin-based, it provides a simple to use interface to easily write such plugins. Projects can easily be configured to use Yalo, activate the warnings/errors that they want, and integrate the tool in Github Actions thanks to SARIF JSON output.
"""

[project]
skip = []

# project-wide library dependencies (not for package-specific deps)
[dependencies]

# project-wide tools dependencies (not for package-specific deps)
[tools.ocamlformat]
for-test = true
[tools.odoc]
for-doc = true
[tools.ppx_expect]
for-test = true
[tools.ppx_inline_test]
for-test = true

[project]

# dirs to skip while scanning for dune files
skip-dirs = []

# dirs to scan for share/ folders (with package names)
share-dirs = ["share"]

# build profile to use by default
# build-profile = ...

# Profile options for this project
#    [profile]
#    dev = { ocaml-flags = "-w +a-4-40-41-42-44" }
#    release = { ocaml-flags = "-w -a" }
[profile]
# ...

# project-wide fields (depends on project skeleton)
# examples:
#  docker-alpine-image = "ocamlpro/ocaml:4.13"
#  dune-lang = "2.1"
#  readme-trailer = "..."
#  dot-gitignore-trailer = "..."
[fields]
dot-gitignore-trailer = """
_*
*.old
*.log
TODO.txt
yalo-deps.opam.locked
yalo.exe
"""
dune-project-trailer = """
(using dune_site 0.1)
"""

github-workflow-after-build = """

      - name: Install locally
        run: opam exec -- dune install

      - name: Run SARIF test
        run: make yalo_sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file:  _yalo.sarif
          category: yalo-lint
"""

[[package]]
dir = "src/yalo"

[[package]]
dir = "src/yalo_misc"

[[package]]
dir = "src/yalo_lib"

[[package]]
dir = "src/ppx_yalo"

[[package]]
dir = "src/yalo_plugin_ocaml"

[[package]]
dir = "src/yalo_plugin_YALO"

[[package]]
dir = "src/yalo_plugin_FIND"

[[package]]
dir = "src/yalo_driver"

[[package]]
dir = "src/yalo_config"


