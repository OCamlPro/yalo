(lang dune 2.7)
; This file was generated by drom, using drom.toml

(cram enable)
(name yalo)
(allow_approximate_merlin)
(generate_opam_files false)
(version 0.1.0)
(formatting (enabled_for ocaml reason))

(package
 (name yalo)
 (synopsis "The yalo project")
 (description "This is the description\nof the yalo OCaml project\n")
 (depends
   (ocaml (>= 4.07.0))
   (yalo_lib ( >= :version ))
   ppx_inline_test
   ppx_expect
   odoc
   ocamlformat
  )
 )

(package
 (name yalo_lib)
 (synopsis "The yalo project")
 (description "This is the description\nof the yalo OCaml project\n")
 (depends
   (ocaml (>= 4.07.0))
   ppxlib
   odoc-parser
   ocaml-compiler-libs
   (ez_file (and (>= 0.3.0) (< 1.0.0)))
   (ez_config (and (>= 0.1.0) (< 1.0.0)))
   (ez_cmdliner (and (>= 0.2.0) (< 1.0.0)))
   (directories ( = 0.2 ))
   base-unix
   ppx_inline_test
   ppx_expect
   odoc
   ocamlformat
  )
 )

(package
 (name ppx_yalo)
 (synopsis "The yalo project")
 (description "This is the description\nof the yalo OCaml project\n")
 (depends
   (ocaml (>= 4.07.0))
   (yalo_plugin_ocaml ( >= :version ))
   (yalo_lib ( >= :version ))
   ppx_inline_test
   ppx_expect
   odoc
   ocamlformat
  )
 )

(package
 (name yalo_plugin_ocaml)
 (synopsis "The yalo project")
 (description "This is the description\nof the yalo OCaml project\n")
 (depends
   (ocaml (>= 4.07.0))
   (yalo_lib ( >= :version ))
   ppx_inline_test
   ppx_expect
   odoc
   ocamlformat
  )
 )

(package
 (name yalo_plugin_YALO)
 (synopsis "The yalo project")
 (description "This is the description\nof the yalo OCaml project\n")
 (depends
   (ocaml (>= 4.07.0))
   (yalo_plugin_ocaml ( >= :version ))
   (yalo_lib ( >= :version ))
   ppx_inline_test
   ppx_expect
   odoc
   ocamlformat
  )
 )

(package
 (name yalo_plugin_FIND)
 (synopsis "The yalo project")
 (description "This is the description\nof the yalo OCaml project\n")
 (depends
   (ocaml (>= 4.07.0))
   (yalo_plugin_ocaml ( >= :version ))
   (yalo_lib ( >= :version ))
   ppx_inline_test
   ppx_expect
   odoc
   ocamlformat
  )
 )


