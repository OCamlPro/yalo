(**************************************************************************)
(*                                                                        *)
(*  Copyright (c) 2025 OCamlPro SAS                                       *)
(*                                                                        *)
(*  All rights reserved.                                                  *)
(*  This file is distributed under the terms of the GNU Lesser General    *)
(*  Public License version 2.1, with the special exception on linking     *)
(*  described in the LICENSE.md file in the root directory.               *)
(*                                                                        *)
(*                                                                        *)
(**************************************************************************)

open EzCompat

type linter_level =
  | Linter_src_file
  | Linter_src_content
  | Linter_src_line

  | Linter_sig
  | Linter_ast_intf
  | Linter_ast_impl
  | Linter_tast_intf
  | Linter_tast_impl

type file_kind = ML | MLI | CMI | CMT | CMTI

type plugin = {
    plugin_name : string;
    mutable plugin_warnings : warning IntMap.t ;
    mutable plugin_linters : linter StringMap.t ;
  }

and tag = {
    tag_name : string;
    mutable tag_warnings : warning list ;
  }

and warning = {
    w_plugin : plugin ;
    w_num : int ;
    w_name : string ;
    mutable w_tags : tag list ;
    w_msg : string ;
    mutable w_level_warning : bool ;
    mutable w_level_error : bool ;
    w_desc : string ;
  }

and project = {
    project_name : string ;
    mutable project_mli_files : file list ;
    mutable project_ml_files : file list ;
    mutable project_cmi_files : file list ;
    mutable project_cmti_files : file list ;
    mutable project_cmt_files : file list ;
  }

and file = {
    file_name : string ;
    file_uid : int ;
    file_crc : Digest.t ;
    file_kind : file_kind ;
    mutable file_done : bool ;
    mutable file_projects : project StringMap.t ;
    mutable file_messages : message list ;
  }

and position = Lexing.position = {
      pos_fname : string;
      pos_lnum : int;
      pos_bol : int;
      pos_cnum : int;
    }


and location = Location.t = {
      loc_start: position;
      loc_end: position;
      loc_ghost: bool;
    }

and message = {
    msg_warning : warning ;
    msg_file : file ;
    msg_loc : location ;
    msg_string : string ;
  }

and linter = {
    linter_name : string ;
    linter_plugin : plugin ;
    linter_warnings : warning list ;
    mutable linter_active : bool ;
    linter_level : linter_level ;
    linter_begin : (unit -> unit);
    linter_open : (file:file -> unit) ;
    linter_install : (linter -> unit) ;
    linter_close : (file:file -> unit) ;
    linter_end : (unit -> unit);
  }

type yalo_project_file = {
    pr_filename : string ; (* name of the file with this content *)

    (* {project: PROJECT} files in this directory and sub-directories
       should be associated with project PROJECT *)
    mutable pr_project : string option;
    (* {anchor: BASENAME} files with this basename BASENAME should
       associate their directory with the current project *)
    mutable pr_anchors : StringSet.t ;
    (* {ignore: BASENAME} skip files with this BASENAME in the
       current directory *)
    mutable pr_ignores : StringSet.t ;
    (* {skipdir: true} skip all files in this directory and
       sub-directories *)
    mutable pr_skipdir : bool ;
    (* {obj: BASENAME} recognize all files with basename BASENAME
       as an object file for this project *)
    mutable pr_objs : StringSet.t ;
    (* {skipobj: BASENAME} skip object file with basename BASENAME.
       Used typically to get rid of object files generated by `dune`
       when they trigger warnings/errors *)
    mutable pr_skipobjs : StringSet.t ;
  }

type src_line_input = {
    line_loc : Location.t ;
    line_line : string ;
    line_sep : string ;
  }

type src_file_input = {
    file_loc : Location.t ;
  }

type src_content_input = {
    content_loc : Location.t ;
    content_string : string ;
  }
